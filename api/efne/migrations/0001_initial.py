# Generated by Django 3.2.7 on 2021-10-23 05:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(max_length=100, verbose_name='Indicatif')),
                ('strip', models.FileField(blank=True, max_length=250, null=True, upload_to='fne/%Y/%m/strips/', verbose_name='Photo du strip')),
            ],
            options={
                'verbose_name': 'Aéronef',
                'verbose_name_plural': 'Aéronefs',
            },
        ),
        migrations.CreateModel(
            name='CdsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_cds', models.TextField(blank=True, default='', verbose_name='Commentaires Chef de Salle')),
                ('rex_cds', models.BooleanField(default=False, verbose_name='REX Chef de Salle')),
                ('notif_rpo', models.BooleanField(default=False, verbose_name='Notification RPO')),
                ('cpi', models.BooleanField(default=False, verbose_name="Constat Préalable d'Infraction")),
            ],
            options={
                'verbose_name': 'CR CDS',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Intitulé')),
                ('rank', models.PositiveIntegerField(verbose_name='Ordre')),
                ('is_tcas', models.BooleanField(default=False, verbose_name='TCAS')),
            ],
            options={
                'verbose_name': "Type d'évènement",
                'verbose_name_plural': "Types d'évènement",
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='Fne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('assigned_to_person', models.CharField(blank=True, max_length=25, null=True, verbose_name='Responsable')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('should_notify', models.BooleanField(default=False, verbose_name='Devrait déclencher un notification')),
                ('event_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date de l'évènement")),
                ('secteur', models.CharField(blank=True, default='', max_length=10, verbose_name='Secteur')),
                ('position', models.CharField(blank=True, default='', max_length=10, verbose_name='Position')),
                ('regroupement', models.CharField(blank=True, default='', max_length=10, verbose_name='Regroupement')),
                ('lieu', models.CharField(blank=True, default='', max_length=100, verbose_name="Lieu de l'évènement")),
                ('isp', models.BooleanField(default=False, verbose_name='Instruction')),
                ('description', models.TextField(verbose_name="Description de l'évènement")),
                ('photo', models.FileField(blank=True, max_length=250, null=True, upload_to='fne/%Y/%m/photos/', verbose_name='Photo descriptive')),
                ('drawing', models.ImageField(blank=True, max_length=250, null=True, upload_to='fne/%Y/%m/drawings/', verbose_name='Schéma descriptif')),
                ('odsarch', models.BooleanField(default=False, verbose_name='ODSARCH')),
                ('vidage_str', models.BooleanField(default=False, verbose_name='Vidage STR')),
                ('lvol', models.BooleanField(default=False, verbose_name='LVOL')),
            ],
            options={
                'verbose_name': 'eFNE',
                'verbose_name_plural': 'eFNEs',
                'ordering': ['event_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FneAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='Action', max_length=250, verbose_name='Intitulé')),
                ('is_default', models.BooleanField(default=False, verbose_name='Par défaut')),
                ('is_terminal', models.BooleanField(default=False, verbose_name='Terminale')),
            ],
            options={
                'verbose_name': 'Action possible',
                'verbose_name_plural': "Graphe d'actions",
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FneCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, verbose_name='Catégorie')),
                ('date', models.DateField(verbose_name="Date d'enregistrement")),
                ('id_list_as_string', models.TextField(help_text='Liste des identifiants uniques de FNE séparées par des points-virgules', verbose_name='Liste des FNEs')),
            ],
            options={
                'verbose_name': 'Compteur de FNE',
                'verbose_name_plural': 'Statistiques FNE',
                'ordering': ('-date', 'category'),
            },
        ),
        migrations.CreateModel(
            name='PostIt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('update_date', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Post-it',
                'verbose_name_plural': 'Post-its',
                'ordering': ['creation_date'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=10, unique=True, verbose_name='Intitulé')),
            ],
            options={
                'verbose_name': 'Rôle',
                'verbose_name_plural': 'Rôles',
                'ordering': ('label',),
            },
        ),
        migrations.CreateModel(
            name='TCASReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pilote_min_distance', models.FloatField(blank=True, default=0, verbose_name='Distance mini donnée par le pilote (en NM)')),
                ('ctl_min_distance', models.FloatField(blank=True, default=0, verbose_name='Distance mini donnée par le contrôleur (en NM)')),
                ('pilote_min_altitude', models.FloatField(blank=True, default=0, verbose_name='Altitude mini donnée par le pilote (en ft)')),
                ('ctl_min_altitude', models.FloatField(blank=True, default=0, verbose_name='Altitude mini donnée par le contrôleur (en ft)')),
                ('traffic_info', models.BooleanField(default=False, verbose_name='Information de trafic')),
                ('pilot_request', models.BooleanField(default=False, verbose_name='Demande du pilote')),
                ('before_manoeuvre', models.BooleanField(blank=True, null=True, verbose_name='Avant la manoeuvre')),
                ('pilot_action_required', models.BooleanField(default=False, verbose_name='Action du pilote justifiée')),
                ('disrupted_traffic', models.BooleanField(default=False, verbose_name='Gestion du trafic perturbée')),
                ('asr', models.BooleanField(default=False, verbose_name='ASR')),
                ('safety_net', models.BooleanField(default=False, verbose_name='Filet de sauvegarde')),
                ('parent_fne', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='tcas_report', to='efne.fne', verbose_name='FNE parente')),
            ],
            options={
                'verbose_name': 'CR TCAS',
                'verbose_name_plural': 'CRs TCAS',
            },
        ),
        migrations.CreateModel(
            name='TechEventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Intitulé')),
                ('helperText', models.CharField(blank=True, max_length=250, null=True, verbose_name="Message d'aide")),
                ('rank', models.PositiveIntegerField(verbose_name='Ordre')),
            ],
            options={
                'verbose_name': "Type d'évènement technique",
                'verbose_name_plural': "Types d'évènement technique",
                'ordering': ['rank'],
            },
        ),
        migrations.CreateModel(
            name='TCASReportAircraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('callsign', models.CharField(blank=True, default='', max_length=20, verbose_name='Indicatif')),
                ('ssr', models.CharField(blank=True, default='', max_length=20, verbose_name='Code SSR')),
                ('flight_phase', models.CharField(choices=[('CLIMB', 'Montée'), ('LEVEL', 'Croisière'), ('DESCENT', 'Descente')], default='LEVEL', max_length=150, verbose_name='Phase de vol')),
                ('real_fl', models.PositiveIntegerField(null=True, verbose_name='Niveau réel')),
                ('assigned_fl', models.PositiveIntegerField(null=True, verbose_name='Niveau assigné')),
                ('is_origin', models.BooleanField(default=False, verbose_name='Origine')),
                ('is_vfr', models.BooleanField(default=False, verbose_name='VFR')),
                ('is_mil', models.BooleanField(default=False, verbose_name='Militaire')),
                ('advisory_type', models.CharField(choices=[('TA', 'Traffic Advisory'), ('RA', 'Resolution Advisory')], default='TA', max_length=2, null=True, verbose_name="Type d'avis")),
                ('contact_radio', models.BooleanField(default=True, verbose_name='Contact radio')),
                ('parent_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aircrafts', to='efne.tcasreport')),
            ],
            options={
                'verbose_name': 'Aéronef',
                'verbose_name_plural': 'Aéronefs',
            },
        ),
        migrations.CreateModel(
            name='SubData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inca_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='Numéro INCA')),
                ('hn', models.CharField(blank=True, max_length=25, null=True, verbose_name='HN')),
                ('parent_fne', models.OneToOneField(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='sub_data', to='efne.fne', verbose_name='FNE parente')),
            ],
            options={
                'verbose_name': 'Données sub',
            },
        ),
        migrations.CreateModel(
            name='SubAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(max_length=250, upload_to='fne/%Y/%m/attachments/', verbose_name='Pièce jointe')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='efne.subdata')),
            ],
            options={
                'verbose_name': 'Pièce jointe',
                'verbose_name_plural': 'Pièces jointes',
            },
        ),
        migrations.CreateModel(
            name='Redactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=100, verbose_name='Nom')),
                ('role', models.CharField(max_length=25, verbose_name='Rôle')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('fne', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redactors', to='efne.fne')),
            ],
            options={
                'verbose_name': 'Rédacteur',
                'verbose_name_plural': 'Rédacteurs',
            },
        ),
    ]
